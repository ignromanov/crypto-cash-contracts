/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CodesFactory,
  CodesFactoryInterface,
} from "../../contracts/CodesFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "redeemer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "secretCode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CodeRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "merkleRootIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "UserCommitmentAdded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "numberOfCodes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "commitCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerkleRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "leaves",
        type: "bytes32[]",
      },
    ],
    name: "getRedeemedLeaves",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserCommitments",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "CSHTokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "redeemedLeaves",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "merkleRootIndex",
        type: "uint256",
      },
    ],
    name: "removeMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "merkleRootIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "secretCode",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "revealCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506121e8806100206000396000f3fe6080604052600436106100e15760003560e01c80638d4e7f421161007f578063a2a5899611610059578063a2a58996146102da578063c4d66de814610303578063d59cd23a1461032c578063f2fde38b14610355576100e8565b80638d4e7f42146102495780638da5cb5b1461027257806399ca856c1461029d576100e8565b806363a237ce116100bb57806363a237ce146101a1578063715018a6146101ca57806371c5ecb1146101e157806385135a1a1461021e576100e8565b80630255c903146100ea5780632c3a04b51461012757806331091d7a14610164576100e8565b366100e857005b005b3480156100f657600080fd5b50610111600480360381019061010c9190611535565b61037e565b60405161011e919061157d565b60405180910390f35b34801561013357600080fd5b5061014e600480360381019061014991906115fd565b61039e565b60405161015b9190611708565b60405180910390f35b34801561017057600080fd5b5061018b60048036038101906101869190611788565b6104a8565b6040516101989190611708565b60405180910390f35b3480156101ad57600080fd5b506101c860048036038101906101c391906117eb565b61053f565b005b3480156101d657600080fd5b506101df61060b565b005b3480156101ed57600080fd5b50610208600480360381019061020391906117eb565b61061f565b6040516102159190611827565b60405180910390f35b34801561022a57600080fd5b50610233610643565b6040516102409190611708565b60405180910390f35b34801561025557600080fd5b50610270600480360381019061026b9190611842565b61069b565b005b34801561027e57600080fd5b506102876107c0565b60405161029491906118a4565b60405180910390f35b3480156102a957600080fd5b506102c460048036038101906102bf91906118bf565b6107ea565b6040516102d19190611827565b60405180910390f35b3480156102e657600080fd5b5061030160048036038101906102fc9190611535565b61081b565b005b34801561030f57600080fd5b5061032a60048036038101906103259190611788565b61095b565b005b34801561033857600080fd5b50610353600480360381019061034e91906118ff565b610ae3565b005b34801561036157600080fd5b5061037c60048036038101906103779190611788565b610b18565b005b60996020528060005260406000206000915054906101000a900460ff1681565b606060008383905067ffffffffffffffff8111156103bf576103be611999565b5b6040519080825280602002602001820160405280156103ed5781602001602082028036833780820191505090505b5090506000805b858590508110156104995760996000878784818110610416576104156119c8565b5b90506020020135815260200190815260200160002060009054906101000a900460ff161561048657858582818110610451576104506119c8565b5b9050602002013583838151811061046b5761046a6119c8565b5b602002602001018181525050818061048290611a26565b9250505b808061049190611a26565b9150506103f4565b50808252819250505092915050565b6060609a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561053357602002820191906000526020600020905b81548152602001906001019080831161051f575b50505050509050919050565b610547610b9c565b609880549050811061058e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058590611acc565b60405180910390fd5b609860016098805490506105a29190611aec565b815481106105b3576105b26119c8565b5b9060005260206000200154609882815481106105d2576105d16119c8565b5b906000526020600020018190555060988054806105f2576105f1611b20565b5b6001900381819060005260206000200160009055905550565b610613610b9c565b61061d6000610c1a565b565b6098818154811061062f57600080fd5b906000526020600020016000915090505481565b6060609880548060200260200160405190810160405280929190818152602001828054801561069157602002820191906000526020600020905b81548152602001906001019080831161067d575b5050505050905090565b6106a3610b9c565b6098839080600181540180825580915050600190039060005260206000200160009091909190915055600060016098805490506106e09190611aec565b9050600082846106f09190611b4f565b9050609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b815260040161074f929190611bb8565b600060405180830381600087803b15801561076957600080fd5b505af115801561077d573d6000803e3d6000fd5b50505050817f14ae70b7538cb704d414f634689a12a1b4ac99bcce8305042069d26ee7fed3f3866040516107b19190611827565b60405180910390a25050505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b609a602052816000526040600020818154811061080657600080fd5b90600052602060002001600091509150505481565b6000609a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b81805490508110156108e05782828281548110610881576108806119c8565b5b906000526020600020015414156108cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c490611c2d565b60405180910390fd5b80806108d890611a26565b915050610861565b50808290806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff167fd6a9ea2f95505c0e6c18f1ded4c61166279e064d070963821696b7981267dd788360405161094f9190611827565b60405180910390a25050565b60008060019054906101000a900460ff1615905080801561098c5750600160008054906101000a900460ff1660ff16105b806109b9575061099b30610ce0565b1580156109b85750600160008054906101000a900460ff1660ff16145b5b6109f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ef90611cbf565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610a35576001600060016101000a81548160ff0219169083151502179055505b610a3d610d03565b610a45610d5c565b81609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610adf5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610ad69190611d31565b60405180910390a15b5050565b6000610aef8685610db5565b90506000610b008888888787610eab565b9050610b0e87878385610fef565b5050505050505050565b610b20610b9c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8790611dbe565b60405180910390fd5b610b9981610c1a565b50565b610ba46112ce565b73ffffffffffffffffffffffffffffffffffffffff16610bc26107c0565b73ffffffffffffffffffffffffffffffffffffffff1614610c18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0f90611e2a565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610d52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4990611ebc565b60405180910390fd5b610d5a6112d6565b565b600060019054906101000a900460ff16610dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da290611ebc565b60405180910390fd5b610db3611337565b565b600080610dc28484611390565b90506000609a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008060005b8380549050811015610e5d5784848281548110610e2d57610e2c6119c8565b5b90600052602060002001541415610e4a5780925060019150610e5d565b8080610e5590611a26565b915050610e0d565b5080610e9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9590611f28565b60405180910390fd5b8194505050505092915050565b60006098805490508610610ef4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eeb90611acc565b60405180910390fd5b6000610f0086866113e9565b9050600060988881548110610f1857610f176119c8565b5b90600052602060002001549050610f41818387876114429190939291909392919063ffffffff16565b610f80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7790611f94565b60405180910390fd5b6099600083815260200190815260200160002060009054906101000a900460ff1615610fe1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd890612000565b60405180910390fd5b819250505095945050505050565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161104c91906118a4565b60206040518083038186803b15801561106457600080fd5b505afa158015611078573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109c9190612035565b9050838110156110e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d8906120d4565b60405180910390fd5b6000609a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600182805490506111369190611aec565b81548110611147576111466119c8565b5b9060005260206000200154818481548110611165576111646119c8565b5b90600052602060002001819055508080548061118457611183611b20565b5b6001900381819060005260206000200160009055905560016099600086815260200190815260200160002060006101000a81548160ff021916908315150217905550609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b8152600401611223929190611bb8565b602060405180830381600087803b15801561123d57600080fd5b505af1158015611251573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112759190612120565b503373ffffffffffffffffffffffffffffffffffffffff167fc45f413c8c6d500e3ae937f75df8a60dfb9968add321854bc776ac33a2ef904687876040516112be92919061214d565b60405180910390a2505050505050565b600033905090565b600060019054906101000a900460ff16611325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131c90611ebc565b60405180910390fd5b6113356113306112ce565b610c1a565b565b600060019054906101000a900460ff16611386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137d90611ebc565b60405180910390fd5b6001606581905550565b600082826040516020016113a592919061214d565b604051602081830303815290604052805190602001206040516020016113cb9190612197565b60405160208183030381529060405280519060200120905092915050565b600082826040516020016113fe92919061214d565b604051602081830303815290604052805190602001206040516020016114249190612197565b60405160208183030381529060405280519060200120905092915050565b60008261145086868561145b565b149050949350505050565b60008082905060005b858590508110156114a75761149282878784818110611486576114856119c8565b5b905060200201356114b3565b9150808061149f90611a26565b915050611464565b50809150509392505050565b60008183106114cb576114c682846114de565b6114d6565b6114d583836114de565b5b905092915050565b600082600052816020526040600020905092915050565b600080fd5b600080fd5b6000819050919050565b611512816114ff565b811461151d57600080fd5b50565b60008135905061152f81611509565b92915050565b60006020828403121561154b5761154a6114f5565b5b600061155984828501611520565b91505092915050565b60008115159050919050565b61157781611562565b82525050565b6000602082019050611592600083018461156e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126115bd576115bc611598565b5b8235905067ffffffffffffffff8111156115da576115d961159d565b5b6020830191508360208202830111156115f6576115f56115a2565b5b9250929050565b60008060208385031215611614576116136114f5565b5b600083013567ffffffffffffffff811115611632576116316114fa565b5b61163e858286016115a7565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61167f816114ff565b82525050565b60006116918383611676565b60208301905092915050565b6000602082019050919050565b60006116b58261164a565b6116bf8185611655565b93506116ca83611666565b8060005b838110156116fb5781516116e28882611685565b97506116ed8361169d565b9250506001810190506116ce565b5085935050505092915050565b6000602082019050818103600083015261172281846116aa565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117558261172a565b9050919050565b6117658161174a565b811461177057600080fd5b50565b6000813590506117828161175c565b92915050565b60006020828403121561179e5761179d6114f5565b5b60006117ac84828501611773565b91505092915050565b6000819050919050565b6117c8816117b5565b81146117d357600080fd5b50565b6000813590506117e5816117bf565b92915050565b600060208284031215611801576118006114f5565b5b600061180f848285016117d6565b91505092915050565b611821816114ff565b82525050565b600060208201905061183c6000830184611818565b92915050565b60008060006060848603121561185b5761185a6114f5565b5b600061186986828701611520565b935050602061187a868287016117d6565b925050604061188b868287016117d6565b9150509250925092565b61189e8161174a565b82525050565b60006020820190506118b96000830184611895565b92915050565b600080604083850312156118d6576118d56114f5565b5b60006118e485828601611773565b92505060206118f5858286016117d6565b9150509250929050565b60008060008060008060a0878903121561191c5761191b6114f5565b5b600061192a89828a016117d6565b965050602061193b89828a01611520565b955050604061194c89828a016117d6565b945050606061195d89828a016117d6565b935050608087013567ffffffffffffffff81111561197e5761197d6114fa565b5b61198a89828a016115a7565b92509250509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a31826117b5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a6457611a636119f7565b5b600182019050919050565b600082825260208201905092915050565b7f496e76616c6964204d65726b6c6520726f6f7420696e64657800000000000000600082015250565b6000611ab6601983611a6f565b9150611ac182611a80565b602082019050919050565b60006020820190508181036000830152611ae581611aa9565b9050919050565b6000611af7826117b5565b9150611b02836117b5565b925082821015611b1557611b146119f7565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000611b5a826117b5565b9150611b65836117b5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b9e57611b9d6119f7565b5b828202905092915050565b611bb2816117b5565b82525050565b6000604082019050611bcd6000830185611895565b611bda6020830184611ba9565b9392505050565b7f436f6d6d69746d656e7420616c72656164792065786973747300000000000000600082015250565b6000611c17601983611a6f565b9150611c2282611be1565b602082019050919050565b60006020820190508181036000830152611c4681611c0a565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611ca9602e83611a6f565b9150611cb482611c4d565b604082019050919050565b60006020820190508181036000830152611cd881611c9c565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000611d1b611d16611d1184611cdf565b611cf6565b611ce9565b9050919050565b611d2b81611d00565b82525050565b6000602082019050611d466000830184611d22565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611da8602683611a6f565b9150611db382611d4c565b604082019050919050565b60006020820190508181036000830152611dd781611d9b565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611e14602083611a6f565b9150611e1f82611dde565b602082019050919050565b60006020820190508181036000830152611e4381611e07565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611ea6602b83611a6f565b9150611eb182611e4a565b604082019050919050565b60006020820190508181036000830152611ed581611e99565b9050919050565b7f496e76616c696420636f6d6d69746d656e740000000000000000000000000000600082015250565b6000611f12601283611a6f565b9150611f1d82611edc565b602082019050919050565b60006020820190508181036000830152611f4181611f05565b9050919050565b7f496e76616c6964204d65726b6c652070726f6f66000000000000000000000000600082015250565b6000611f7e601483611a6f565b9150611f8982611f48565b602082019050919050565b60006020820190508181036000830152611fad81611f71565b9050919050565b7f436f64652068617320616c7265616479206265656e2072656465656d65640000600082015250565b6000611fea601e83611a6f565b9150611ff582611fb4565b602082019050919050565b6000602082019050818103600083015261201981611fdd565b9050919050565b60008151905061202f816117bf565b92915050565b60006020828403121561204b5761204a6114f5565b5b600061205984828501612020565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e7320696e2074686520636f6e7472616360008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b60006120be602183611a6f565b91506120c982612062565b604082019050919050565b600060208201905081810360008301526120ed816120b1565b9050919050565b6120fd81611562565b811461210857600080fd5b50565b60008151905061211a816120f4565b92915050565b600060208284031215612136576121356114f5565b5b60006121448482850161210b565b91505092915050565b60006040820190506121626000830185611818565b61216f6020830184611ba9565b9392505050565b6000819050919050565b61219161218c826114ff565b612176565b82525050565b60006121a38284612180565b6020820191508190509291505056fea26469706673582212208219502779775174726cac85f8658994706a669a781c40ff029e5920c034275a64736f6c63430008090033";

type CodesFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CodesFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CodesFactory__factory extends ContractFactory {
  constructor(...args: CodesFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CodesFactory> {
    return super.deploy(overrides || {}) as Promise<CodesFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CodesFactory {
    return super.attach(address) as CodesFactory;
  }
  override connect(signer: Signer): CodesFactory__factory {
    return super.connect(signer) as CodesFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CodesFactoryInterface {
    return new utils.Interface(_abi) as CodesFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CodesFactory {
    return new Contract(address, _abi, signerOrProvider) as CodesFactory;
  }
}
