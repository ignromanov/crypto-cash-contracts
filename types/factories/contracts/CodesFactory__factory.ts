/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CodesFactory,
  CodesFactoryInterface,
} from "../../contracts/CodesFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "redeemer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "secretCode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CodeRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "merkleRootIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "UserCommitmentAdded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "numberOfCodes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "commitCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerkleRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "leaves",
        type: "bytes32[]",
      },
    ],
    name: "getRedeemedLeaves",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserCommitments",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "CSHTokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "redeemedLeaves",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "merkleRootIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "secretCode",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "revealCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506120d8806100206000396000f3fe6080604052600436106100c65760003560e01c80638d4e7f421161007f578063a2a5899611610059578063a2a5899614610296578063c4d66de8146102bf578063d59cd23a146102e8578063f2fde38b14610311576100cd565b80638d4e7f42146102055780638da5cb5b1461022e57806399ca856c14610259576100cd565b80630255c903146100cf5780632c3a04b51461010c57806331091d7a14610149578063715018a61461018657806371c5ecb11461019d57806385135a1a146101da576100cd565b366100cd57005b005b3480156100db57600080fd5b506100f660048036038101906100f19190611425565b61033a565b604051610103919061146d565b60405180910390f35b34801561011857600080fd5b50610133600480360381019061012e91906114ed565b61035a565b60405161014091906115f8565b60405180910390f35b34801561015557600080fd5b50610170600480360381019061016b9190611678565b610464565b60405161017d91906115f8565b60405180910390f35b34801561019257600080fd5b5061019b6104fb565b005b3480156101a957600080fd5b506101c460048036038101906101bf91906116db565b61050f565b6040516101d19190611717565b60405180910390f35b3480156101e657600080fd5b506101ef610533565b6040516101fc91906115f8565b60405180910390f35b34801561021157600080fd5b5061022c60048036038101906102279190611732565b61058b565b005b34801561023a57600080fd5b506102436106b0565b6040516102509190611794565b60405180910390f35b34801561026557600080fd5b50610280600480360381019061027b91906117af565b6106da565b60405161028d9190611717565b60405180910390f35b3480156102a257600080fd5b506102bd60048036038101906102b89190611425565b61070b565b005b3480156102cb57600080fd5b506102e660048036038101906102e19190611678565b61084b565b005b3480156102f457600080fd5b5061030f600480360381019061030a91906117ef565b6109d3565b005b34801561031d57600080fd5b5061033860048036038101906103339190611678565b610a08565b005b60996020528060005260406000206000915054906101000a900460ff1681565b606060008383905067ffffffffffffffff81111561037b5761037a611889565b5b6040519080825280602002602001820160405280156103a95781602001602082028036833780820191505090505b5090506000805b8585905081101561045557609960008787848181106103d2576103d16118b8565b5b90506020020135815260200190815260200160002060009054906101000a900460ff16156104425785858281811061040d5761040c6118b8565b5b90506020020135838381518110610427576104266118b8565b5b602002602001018181525050818061043e90611916565b9250505b808061044d90611916565b9150506103b0565b50808252819250505092915050565b6060609a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156104ef57602002820191906000526020600020905b8154815260200190600101908083116104db575b50505050509050919050565b610503610a8c565b61050d6000610b0a565b565b6098818154811061051f57600080fd5b906000526020600020016000915090505481565b6060609880548060200260200160405190810160405280929190818152602001828054801561058157602002820191906000526020600020905b81548152602001906001019080831161056d575b5050505050905090565b610593610a8c565b6098839080600181540180825580915050600190039060005260206000200160009091909190915055600060016098805490506105d0919061195f565b9050600082846105e09190611993565b9050609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b815260040161063f9291906119fc565b600060405180830381600087803b15801561065957600080fd5b505af115801561066d573d6000803e3d6000fd5b50505050817f14ae70b7538cb704d414f634689a12a1b4ac99bcce8305042069d26ee7fed3f3866040516106a19190611717565b60405180910390a25050505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b609a60205281600052604060002081815481106106f657600080fd5b90600052602060002001600091509150505481565b6000609a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b81805490508110156107d05782828281548110610771576107706118b8565b5b906000526020600020015414156107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b490611a82565b60405180910390fd5b80806107c890611916565b915050610751565b50808290806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff167fd6a9ea2f95505c0e6c18f1ded4c61166279e064d070963821696b7981267dd788360405161083f9190611717565b60405180910390a25050565b60008060019054906101000a900460ff1615905080801561087c5750600160008054906101000a900460ff1660ff16105b806108a9575061088b30610bd0565b1580156108a85750600160008054906101000a900460ff1660ff16145b5b6108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90611b14565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610925576001600060016101000a81548160ff0219169083151502179055505b61092d610bf3565b610935610c4c565b81609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156109cf5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516109c69190611b86565b60405180910390a15b5050565b60006109df8685610ca5565b905060006109f08888888787610d9b565b90506109fe87878385610edf565b5050505050505050565b610a10610a8c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7790611c13565b60405180910390fd5b610a8981610b0a565b50565b610a946111be565b73ffffffffffffffffffffffffffffffffffffffff16610ab26106b0565b73ffffffffffffffffffffffffffffffffffffffff1614610b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aff90611c7f565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3990611d11565b60405180910390fd5b610c4a6111c6565b565b600060019054906101000a900460ff16610c9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9290611d11565b60405180910390fd5b610ca3611227565b565b600080610cb28484611280565b90506000609a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008060005b8380549050811015610d4d5784848281548110610d1d57610d1c6118b8565b5b90600052602060002001541415610d3a5780925060019150610d4d565b8080610d4590611916565b915050610cfd565b5080610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8590611d7d565b60405180910390fd5b8194505050505092915050565b60006098805490508610610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb90611de9565b60405180910390fd5b6000610df086866112d9565b9050600060988881548110610e0857610e076118b8565b5b90600052602060002001549050610e31818387876113329190939291909392919063ffffffff16565b610e70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6790611e55565b60405180910390fd5b6099600083815260200190815260200160002060009054906101000a900460ff1615610ed1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec890611ec1565b60405180910390fd5b819250505095945050505050565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f3c9190611794565b60206040518083038186803b158015610f5457600080fd5b505afa158015610f68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8c9190611ef6565b905083811015610fd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc890611f95565b60405180910390fd5b6000609a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060018280549050611026919061195f565b81548110611037576110366118b8565b5b9060005260206000200154818481548110611055576110546118b8565b5b90600052602060002001819055508080548061107457611073611fb5565b5b6001900381819060005260206000200160009055905560016099600086815260200190815260200160002060006101000a81548160ff021916908315150217905550609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b81526004016111139291906119fc565b602060405180830381600087803b15801561112d57600080fd5b505af1158015611141573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111659190612010565b503373ffffffffffffffffffffffffffffffffffffffff167fc45f413c8c6d500e3ae937f75df8a60dfb9968add321854bc776ac33a2ef904687876040516111ae92919061203d565b60405180910390a2505050505050565b600033905090565b600060019054906101000a900460ff16611215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120c90611d11565b60405180910390fd5b6112256112206111be565b610b0a565b565b600060019054906101000a900460ff16611276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126d90611d11565b60405180910390fd5b6001606581905550565b6000828260405160200161129592919061203d565b604051602081830303815290604052805190602001206040516020016112bb9190612087565b60405160208183030381529060405280519060200120905092915050565b600082826040516020016112ee92919061203d565b604051602081830303815290604052805190602001206040516020016113149190612087565b60405160208183030381529060405280519060200120905092915050565b60008261134086868561134b565b149050949350505050565b60008082905060005b858590508110156113975761138282878784818110611376576113756118b8565b5b905060200201356113a3565b9150808061138f90611916565b915050611354565b50809150509392505050565b60008183106113bb576113b682846113ce565b6113c6565b6113c583836113ce565b5b905092915050565b600082600052816020526040600020905092915050565b600080fd5b600080fd5b6000819050919050565b611402816113ef565b811461140d57600080fd5b50565b60008135905061141f816113f9565b92915050565b60006020828403121561143b5761143a6113e5565b5b600061144984828501611410565b91505092915050565b60008115159050919050565b61146781611452565b82525050565b6000602082019050611482600083018461145e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126114ad576114ac611488565b5b8235905067ffffffffffffffff8111156114ca576114c961148d565b5b6020830191508360208202830111156114e6576114e5611492565b5b9250929050565b60008060208385031215611504576115036113e5565b5b600083013567ffffffffffffffff811115611522576115216113ea565b5b61152e85828601611497565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61156f816113ef565b82525050565b60006115818383611566565b60208301905092915050565b6000602082019050919050565b60006115a58261153a565b6115af8185611545565b93506115ba83611556565b8060005b838110156115eb5781516115d28882611575565b97506115dd8361158d565b9250506001810190506115be565b5085935050505092915050565b60006020820190508181036000830152611612818461159a565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116458261161a565b9050919050565b6116558161163a565b811461166057600080fd5b50565b6000813590506116728161164c565b92915050565b60006020828403121561168e5761168d6113e5565b5b600061169c84828501611663565b91505092915050565b6000819050919050565b6116b8816116a5565b81146116c357600080fd5b50565b6000813590506116d5816116af565b92915050565b6000602082840312156116f1576116f06113e5565b5b60006116ff848285016116c6565b91505092915050565b611711816113ef565b82525050565b600060208201905061172c6000830184611708565b92915050565b60008060006060848603121561174b5761174a6113e5565b5b600061175986828701611410565b935050602061176a868287016116c6565b925050604061177b868287016116c6565b9150509250925092565b61178e8161163a565b82525050565b60006020820190506117a96000830184611785565b92915050565b600080604083850312156117c6576117c56113e5565b5b60006117d485828601611663565b92505060206117e5858286016116c6565b9150509250929050565b60008060008060008060a0878903121561180c5761180b6113e5565b5b600061181a89828a016116c6565b965050602061182b89828a01611410565b955050604061183c89828a016116c6565b945050606061184d89828a016116c6565b935050608087013567ffffffffffffffff81111561186e5761186d6113ea565b5b61187a89828a01611497565b92509250509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611921826116a5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611954576119536118e7565b5b600182019050919050565b600061196a826116a5565b9150611975836116a5565b925082821015611988576119876118e7565b5b828203905092915050565b600061199e826116a5565b91506119a9836116a5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156119e2576119e16118e7565b5b828202905092915050565b6119f6816116a5565b82525050565b6000604082019050611a116000830185611785565b611a1e60208301846119ed565b9392505050565b600082825260208201905092915050565b7f436f6d6d69746d656e7420616c72656164792065786973747300000000000000600082015250565b6000611a6c601983611a25565b9150611a7782611a36565b602082019050919050565b60006020820190508181036000830152611a9b81611a5f565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611afe602e83611a25565b9150611b0982611aa2565b604082019050919050565b60006020820190508181036000830152611b2d81611af1565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000611b70611b6b611b6684611b34565b611b4b565b611b3e565b9050919050565b611b8081611b55565b82525050565b6000602082019050611b9b6000830184611b77565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611bfd602683611a25565b9150611c0882611ba1565b604082019050919050565b60006020820190508181036000830152611c2c81611bf0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611c69602083611a25565b9150611c7482611c33565b602082019050919050565b60006020820190508181036000830152611c9881611c5c565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611cfb602b83611a25565b9150611d0682611c9f565b604082019050919050565b60006020820190508181036000830152611d2a81611cee565b9050919050565b7f496e76616c696420636f6d6d69746d656e740000000000000000000000000000600082015250565b6000611d67601283611a25565b9150611d7282611d31565b602082019050919050565b60006020820190508181036000830152611d9681611d5a565b9050919050565b7f496e76616c6964204d65726b6c6520726f6f7420696e64657800000000000000600082015250565b6000611dd3601983611a25565b9150611dde82611d9d565b602082019050919050565b60006020820190508181036000830152611e0281611dc6565b9050919050565b7f496e76616c6964204d65726b6c652070726f6f66000000000000000000000000600082015250565b6000611e3f601483611a25565b9150611e4a82611e09565b602082019050919050565b60006020820190508181036000830152611e6e81611e32565b9050919050565b7f436f64652068617320616c7265616479206265656e2072656465656d65640000600082015250565b6000611eab601e83611a25565b9150611eb682611e75565b602082019050919050565b60006020820190508181036000830152611eda81611e9e565b9050919050565b600081519050611ef0816116af565b92915050565b600060208284031215611f0c57611f0b6113e5565b5b6000611f1a84828501611ee1565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e7320696e2074686520636f6e7472616360008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f7f602183611a25565b9150611f8a82611f23565b604082019050919050565b60006020820190508181036000830152611fae81611f72565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b611fed81611452565b8114611ff857600080fd5b50565b60008151905061200a81611fe4565b92915050565b600060208284031215612026576120256113e5565b5b600061203484828501611ffb565b91505092915050565b60006040820190506120526000830185611708565b61205f60208301846119ed565b9392505050565b6000819050919050565b61208161207c826113ef565b612066565b82525050565b60006120938284612070565b6020820191508190509291505056fea2646970667358221220b27512da8cf7a58f9ee3cca6400e0065ca070f527a8d585d04b8226af964206464736f6c63430008090033";

type CodesFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CodesFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CodesFactory__factory extends ContractFactory {
  constructor(...args: CodesFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CodesFactory> {
    return super.deploy(overrides || {}) as Promise<CodesFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CodesFactory {
    return super.attach(address) as CodesFactory;
  }
  override connect(signer: Signer): CodesFactory__factory {
    return super.connect(signer) as CodesFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CodesFactoryInterface {
    return new utils.Interface(_abi) as CodesFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CodesFactory {
    return new Contract(address, _abi, signerOrProvider) as CodesFactory;
  }
}
