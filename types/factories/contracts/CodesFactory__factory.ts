/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CodesFactory,
  CodesFactoryInterface,
} from "../../contracts/CodesFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stMadTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CodeRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "merkleRootIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "numberOfCodes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerkleRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "merkleRootIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "secretCodeHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeemCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "redeemedCodes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001456380380620014568339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b61123f80620002176000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806385135a1a1161005b57806385135a1a146101135780638d4e7f42146101315780638da5cb5b1461014d578063f2fde38b1461016b57610088565b80631c51cc061461008d578063340e3623146100a9578063715018a6146100d957806371c5ecb1146100e3575b600080fd5b6100a760048036038101906100a291906109d1565b610187565b005b6100c360048036038101906100be9190610a59565b61047b565b6040516100d09190610aa1565b60405180910390f35b6100e161049b565b005b6100fd60048036038101906100f89190610abc565b6104af565b60405161010a9190610af8565b60405180910390f35b61011b6104d3565b6040516101289190610bd1565b60405180910390f35b61014b60048036038101906101469190610bf3565b61052b565b005b610155610650565b6040516101629190610c87565b60405180910390f35b61018560048036038101906101809190610cce565b610679565b005b60028054905085106101ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c590610d58565b60405180910390fd5b600082826040516020016101e3929190610dba565b60405160208183030381529060405280519060200120905060006002878154811061021157610210610de6565b5b9060005260206000200154905061026a868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505082846106fd565b6102a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a090610e61565b60405180910390fd5b6003600085815260200190815260200160002060009054906101000a900460ff161561030a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030190610ecd565b60405180910390fd5b60016003600086815260200190815260200160002060006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610393929190610efc565b602060405180830381600087803b1580156103ad57600080fd5b505af11580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190610f51565b610424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041b90610fca565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f739f8ee835b17b45c3440318f23a9a52f3b7b3194bd17cd54344eeb2aa59d9088460405161046a9190610fea565b60405180910390a250505050505050565b60036020528060005260406000206000915054906101000a900460ff1681565b6104a3610714565b6104ad6000610792565b565b600281815481106104bf57600080fd5b906000526020600020016000915090505481565b6060600280548060200260200160405190810160405280929190818152602001828054801561052157602002820191906000526020600020905b81548152602001906001019080831161050d575b5050505050905090565b610533610714565b6002839080600181540180825580915050600190039060005260206000200160009091909190915055600060016002805490506105709190611034565b9050600082846105809190611068565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b81526004016105df929190610efc565b600060405180830381600087803b1580156105f957600080fd5b505af115801561060d573d6000803e3d6000fd5b50505050817f14ae70b7538cb704d414f634689a12a1b4ac99bcce8305042069d26ee7fed3f3866040516106419190610af8565b60405180910390a25050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610681610714565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e890611134565b60405180910390fd5b6106fa81610792565b50565b60008261070a8584610856565b1490509392505050565b61071c6108ac565b73ffffffffffffffffffffffffffffffffffffffff1661073a610650565b73ffffffffffffffffffffffffffffffffffffffff1614610790576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610787906111a0565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008082905060005b84518110156108a15761088c8286838151811061087f5761087e610de6565b5b60200260200101516108b4565b91508080610899906111c0565b91505061085f565b508091505092915050565b600033905090565b60008183106108cc576108c782846108df565b6108d7565b6108d683836108df565b5b905092915050565b600082600052816020526040600020905092915050565b600080fd5b600080fd5b6000819050919050565b61091381610900565b811461091e57600080fd5b50565b6000813590506109308161090a565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261095b5761095a610936565b5b8235905067ffffffffffffffff8111156109785761097761093b565b5b60208301915083602082028301111561099457610993610940565b5b9250929050565b6000819050919050565b6109ae8161099b565b81146109b957600080fd5b50565b6000813590506109cb816109a5565b92915050565b6000806000806000608086880312156109ed576109ec6108f6565b5b60006109fb88828901610921565b955050602086013567ffffffffffffffff811115610a1c57610a1b6108fb565b5b610a2888828901610945565b94509450506040610a3b888289016109bc565b9250506060610a4c88828901610921565b9150509295509295909350565b600060208284031215610a6f57610a6e6108f6565b5b6000610a7d848285016109bc565b91505092915050565b60008115159050919050565b610a9b81610a86565b82525050565b6000602082019050610ab66000830184610a92565b92915050565b600060208284031215610ad257610ad16108f6565b5b6000610ae084828501610921565b91505092915050565b610af28161099b565b82525050565b6000602082019050610b0d6000830184610ae9565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610b488161099b565b82525050565b6000610b5a8383610b3f565b60208301905092915050565b6000602082019050919050565b6000610b7e82610b13565b610b888185610b1e565b9350610b9383610b2f565b8060005b83811015610bc4578151610bab8882610b4e565b9750610bb683610b66565b925050600181019050610b97565b5085935050505092915050565b60006020820190508181036000830152610beb8184610b73565b905092915050565b600080600060608486031215610c0c57610c0b6108f6565b5b6000610c1a868287016109bc565b9350506020610c2b86828701610921565b9250506040610c3c86828701610921565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c7182610c46565b9050919050565b610c8181610c66565b82525050565b6000602082019050610c9c6000830184610c78565b92915050565b610cab81610c66565b8114610cb657600080fd5b50565b600081359050610cc881610ca2565b92915050565b600060208284031215610ce457610ce36108f6565b5b6000610cf284828501610cb9565b91505092915050565b600082825260208201905092915050565b7f496e76616c6964204d65726b6c6520726f6f7420696e64657800000000000000600082015250565b6000610d42601983610cfb565b9150610d4d82610d0c565b602082019050919050565b60006020820190508181036000830152610d7181610d35565b9050919050565b6000819050919050565b610d93610d8e8261099b565b610d78565b82525050565b6000819050919050565b610db4610daf82610900565b610d99565b82525050565b6000610dc68285610d82565b602082019150610dd68284610da3565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e76616c6964204d65726b6c652070726f6f66000000000000000000000000600082015250565b6000610e4b601483610cfb565b9150610e5682610e15565b602082019050919050565b60006020820190508181036000830152610e7a81610e3e565b9050919050565b7f436f64652068617320616c7265616479206265656e2072656465656d65640000600082015250565b6000610eb7601e83610cfb565b9150610ec282610e81565b602082019050919050565b60006020820190508181036000830152610ee681610eaa565b9050919050565b610ef681610900565b82525050565b6000604082019050610f116000830185610c78565b610f1e6020830184610eed565b9392505050565b610f2e81610a86565b8114610f3957600080fd5b50565b600081519050610f4b81610f25565b92915050565b600060208284031215610f6757610f666108f6565b5b6000610f7584828501610f3c565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000610fb4601583610cfb565b9150610fbf82610f7e565b602082019050919050565b60006020820190508181036000830152610fe381610fa7565b9050919050565b6000602082019050610fff6000830184610eed565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061103f82610900565b915061104a83610900565b92508282101561105d5761105c611005565b5b828203905092915050565b600061107382610900565b915061107e83610900565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110b7576110b6611005565b5b828202905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061111e602683610cfb565b9150611129826110c2565b604082019050919050565b6000602082019050818103600083015261114d81611111565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061118a602083610cfb565b915061119582611154565b602082019050919050565b600060208201905081810360008301526111b98161117d565b9050919050565b60006111cb82610900565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111fe576111fd611005565b5b60018201905091905056fea26469706673582212203c8f8ed8c7395ca8f27180e58fc1c84ae436025d1e04f64729bfdc247cca7b1164736f6c63430008090033";

type CodesFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CodesFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CodesFactory__factory extends ContractFactory {
  constructor(...args: CodesFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    stMadTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CodesFactory> {
    return super.deploy(
      stMadTokenAddress,
      overrides || {}
    ) as Promise<CodesFactory>;
  }
  override getDeployTransaction(
    stMadTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(stMadTokenAddress, overrides || {});
  }
  override attach(address: string): CodesFactory {
    return super.attach(address) as CodesFactory;
  }
  override connect(signer: Signer): CodesFactory__factory {
    return super.connect(signer) as CodesFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CodesFactoryInterface {
    return new utils.Interface(_abi) as CodesFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CodesFactory {
    return new Contract(address, _abi, signerOrProvider) as CodesFactory;
  }
}
