/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CodesFactory,
  CodesFactoryInterface,
} from "../../contracts/CodesFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "redeemer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "secretCode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CodeRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "merkleRootIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "UserCommitmentAdded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "numberOfCodes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "commitCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerkleRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "leaves",
        type: "bytes32[]",
      },
    ],
    name: "getRedeemedLeaves",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserCommitments",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "CSHTokenAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "redeemedLeaves",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "merkleRootIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "secretCode",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "revealCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612b0b806100206000396000f3fe6080604052600436106100c65760003560e01c80638d4e7f421161007f578063a2a5899611610059578063a2a58996146102aa578063c4d66de8146102d3578063d59cd23a146102fc578063f2fde38b14610325576100cd565b80638d4e7f42146102195780638da5cb5b1461024257806399ca856c1461026d576100cd565b80630255c903146100e35780632c3a04b51461012057806331091d7a1461015d578063715018a61461019a57806371c5ecb1146101b157806385135a1a146101ee576100cd565b366100cd57005b6100e16781ca11416df159fa60c01b61034e565b005b3480156100ef57600080fd5b5061010a60048036038101906101059190611e58565b610351565b6040516101179190611ea0565b60405180910390f35b34801561012c57600080fd5b5061014760048036038101906101429190611f20565b610371565b604051610154919061202b565b60405180910390f35b34801561016957600080fd5b50610184600480360381019061017f91906120ab565b6105c1565b604051610191919061202b565b60405180910390f35b3480156101a657600080fd5b506101af610694565b005b3480156101bd57600080fd5b506101d860048036038101906101d3919061210e565b6106a8565b6040516101e5919061214a565b60405180910390f35b3480156101fa57600080fd5b506102036106cc565b604051610210919061202b565b60405180910390f35b34801561022557600080fd5b50610240600480360381019061023b9190612165565b610760565b005b34801561024e57600080fd5b50610257610989565b60405161026491906121c7565b60405180910390f35b34801561027957600080fd5b50610294600480360381019061028f91906121e2565b6109b3565b6040516102a1919061214a565b60405180910390f35b3480156102b657600080fd5b506102d160048036038101906102cc9190611e58565b6109e4565b005b3480156102df57600080fd5b506102fa60048036038101906102f591906120ab565b610c28565b005b34801561030857600080fd5b50610323600480360381019061031e9190612222565b610e50565b005b34801561033157600080fd5b5061034c600480360381019061034791906120ab565b610f11565b005b50565b60996020528060005260406000206000915054906101000a900460ff1681565b60606103876766fd3d5083532ec960c01b61034e565b61039b6753e64fd55cb586ec60c01b61034e565b6103af67c43d2e981d78dd1760c01b61034e565b60008383905067ffffffffffffffff8111156103ce576103cd6122bc565b5b6040519080825280602002602001820160405280156103fc5781602001602082028036833780820191505090505b509050610413670710cb65646f42b860c01b61034e565b61042767e1f3c1b0cfca41da60c01b61034e565b600061043d6732d6412f2033c26360c01b61034e565b6104516781b4df9c9db1c5f960c01b61034e565b60005b858590508110156105765761047367625ca1e54762807060c01b61034e565b6104876739abf29a1577270b60c01b61034e565b6099600087878481811061049e5761049d6122eb565b5b90506020020135815260200190815260200160002060009054906101000a900460ff161561054e576104da670e775418e22793ec60c01b61034e565b6104ee67bed2358d47ed33fd60c01b61034e565b858582818110610501576105006122eb565b5b9050602002013583838151811061051b5761051a6122eb565b5b60200260200101818152505061053b6701b38fead645099660c01b61034e565b818061054690612349565b925050610563565b61056267b65d6d865aa60d1260c01b61034e565b5b808061056e90612349565b915050610454565b5061058b6784657de16cb6029c60c01b61034e565b8082526105a267917c4fb56e25b89960c01b61034e565b6105b667f02d36b5989aed7660c01b61034e565b819250505092915050565b60606105d7670cc9ed4df8a3cd7560c01b61034e565b6105eb67dedd25ad30bf391a60c01b61034e565b6105ff6765ff704491c4689560c01b61034e565b609a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561068857602002820191906000526020600020905b815481526020019060010190808311610674575b50505050509050919050565b61069c610f95565b6106a66000611013565b565b609881815481106106b857600080fd5b906000526020600020016000915090505481565b60606106e2675fcbc67c0ab8842560c01b61034e565b6106f66724c7c3bd1248f75660c01b61034e565b61070a67b915149abe63237360c01b61034e565b609880548060200260200160405190810160405280929190818152602001828054801561075657602002820191906000526020600020905b815481526020019060010190808311610742575b5050505050905090565b6107746738e20e7818f8d6bb60c01b61034e565b61077c610f95565b61079067c0717421d5b4721260c01b61034e565b6107a467bbd2e993ffddeed260c01b61034e565b6107b8677449314ee31f59f760c01b61034e565b6107cc6790ce2290e091a14060c01b61034e565b609883908060018154018082558091505060019003906000526020600020016000909190919091505561080967504191e9b811dd5260c01b61034e565b61081d67af37c3cf2cc030fb60c01b61034e565b600060016098805490506108319190612392565b9050610847678853af4527f9a03060c01b61034e565b61085b6726c7556e6dacc78e60c01b61034e565b6000828461086991906123c6565b905061087f67d911874c1c68540e60c01b61034e565b610893678dda242622f56f6960c01b61034e565b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b81526004016108f092919061242f565b600060405180830381600087803b15801561090a57600080fd5b505af115801561091e573d6000803e3d6000fd5b5050505061093667d1e9f7aab8fb88eb60c01b61034e565b61094a6738b23239859496b860c01b61034e565b817f14ae70b7538cb704d414f634689a12a1b4ac99bcce8305042069d26ee7fed3f38660405161097a919061214a565b60405180910390a25050505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b609a60205281600052604060002081815481106109cf57600080fd5b90600052602060002001600091509150505481565b6109f86743bfef15977b286e60c01b61034e565b610a0c6724f9c25f32d7addb60c01b61034e565b610a20670dcc14db7d5153ee60c01b61034e565b6000609a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050610a7767a8bf30dc0efbe9cc60c01b61034e565b610a8b678d7fa686a0915a6a60c01b61034e565b60005b8180549050811015610b5d57610aae672d759383479acff560c01b61034e565b610ac267cd7e438c38e256b160c01b61034e565b610ad667d936be26f9205e7960c01b61034e565b82828281548110610aea57610ae96122eb565b5b90600052602060002001541415610b36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2d906124b5565b60405180910390fd5b610b4a670e826558893992df60c01b61034e565b8080610b5590612349565b915050610a8e565b50610b7267c0a31c0b433804e460c01b61034e565b610b86677ca9407ec00e726260c01b61034e565b80829080600181540180825580915050600190039060005260206000200160009091909190915055610bc267e8abcfb04d097f6060c01b61034e565b610bd667239710ea7b888b3760c01b61034e565b3373ffffffffffffffffffffffffffffffffffffffff167fd6a9ea2f95505c0e6c18f1ded4c61166279e064d070963821696b7981267dd7883604051610c1c919061214a565b60405180910390a25050565b610c3c675f593d5b926943ec60c01b61034e565b60008060019054906101000a900460ff16159050808015610c6d5750600160008054906101000a900460ff1660ff16105b80610c9a5750610c7c306110d9565b158015610c995750600160008054906101000a900460ff1660ff16145b5b610cd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd090612547565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610d16576001600060016101000a81548160ff0219169083151502179055505b610d2a67fccb169cec22fb9060c01b61034e565b610d3e67ca418cf8f33aa22060c01b61034e565b610d5267f8f18c3c5e04a79460c01b61034e565b610d66672761aaad3674014b60c01b61034e565b610d6e6110fc565b610d8267ff583bdcbe493de160c01b61034e565b610d9667fa2308e286a954e260c01b61034e565b610d9e611155565b610db267414b6ffdc21391a960c01b61034e565b81609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610e4c5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610e4391906125b9565b60405180910390a15b5050565b610e6467835a719699e2a9c260c01b61034e565b610e78670a27174d73c3737160c01b61034e565b610e8c67a5aa33444124712660c01b61034e565b6000610e9886856111ae565b9050610eae678ab79c1f1f7a2efa60c01b61034e565b610ec267c6e44e65c9b308b960c01b61034e565b6000610ed18888888787611486565b9050610ee767492cad484ec529d860c01b61034e565b610efb671ccbffda663359a960c01b61034e565b610f0787878385611746565b5050505050505050565b610f19610f95565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8090612646565b60405180910390fd5b610f9281611013565b50565b610f9d611b79565b73ffffffffffffffffffffffffffffffffffffffff16610fbb610989565b73ffffffffffffffffffffffffffffffffffffffff1614611011576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611008906126b2565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661114b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114290612744565b60405180910390fd5b611153611b81565b565b600060019054906101000a900460ff166111a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119b90612744565b60405180910390fd5b6111ac611be2565b565b60006111c46758cee5e1cbeef0df60c01b61034e565b6111d8677dc865691bffe69260c01b61034e565b6111ec670415a3570d88d42d60c01b61034e565b60006111f88484611c3b565b905061120e67048d152d8320e3fa60c01b61034e565b611222675ce67a8b47c9f1cc60c01b61034e565b6000609a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506112796727eedc3078f43e1d60c01b61034e565b61128d679a69d86199a3393d60c01b61034e565b60006112a3675d5eec96738a89bb60c01b61034e565b6112b767c324a84849663a0f60c01b61034e565b60006112cd6740e23ef761400e3a60c01b61034e565b6112e16715de8bcbae02095b60c01b61034e565b60005b83805490508110156113c057611304679c1e3c9578a2f14160c01b61034e565b611318678bfa569cb6b9d70360c01b61034e565b8484828154811061132c5761132b6122eb565b5b906000526020600020015414156113995761135167f0e0ee3a17f7ca8d60c01b61034e565b61136567fa9c8a0f59afdbf160c01b61034e565b80925061137c67df938c7d9e435d3760c01b61034e565b6001915061139467534204734409b24060c01b61034e565b6113c0565b6113ad6778a19f258130dab760c01b61034e565b80806113b890612349565b9150506112e4565b506113d56735faaa0fde0e43eb60c01b61034e565b6113e967b2885668b27d7d4660c01b61034e565b6113fd678d524f2ca46d6e3060c01b61034e565b8061143d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611434906127b0565b60405180910390fd5b6114516769f7f9e48ac1b28f60c01b61034e565b61146567dedb3b19472f439560c01b61034e565b61147967c7b9a320df2483f960c01b61034e565b8194505050505092915050565b600061149c6751641cdcdbd798e260c01b61034e565b6114b06745fb1ec60df6b5bf60c01b61034e565b6114c467f4a2ed0bd61ecfb060c01b61034e565b6114d867ddea451b4fdd0cce60c01b61034e565b609880549050861061151f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115169061281c565b60405180910390fd5b61153367f20b31815f22406160c01b61034e565b61154767b02562a7f7daab3760c01b61034e565b61155b671028a417f29a53c860c01b61034e565b60006115678686611cd0565b905061157d6758d58fc2de5eb5fe60c01b61034e565b61159167d95d49ce44256edc60c01b61034e565b6000609888815481106115a7576115a66122eb565b5b906000526020600020015490506115c8679d1cc5de05ae0a4260c01b61034e565b6115dc674ebc5a0cfde45ef360c01b61034e565b6115f067e5c372e21552fef060c01b61034e565b61160c81838787611d659190939291909392919063ffffffff16565b61164b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164290612888565b60405180910390fd5b61165f677838f2b038eb749e60c01b61034e565b611673671c98eec3e6d7ca3f60c01b61034e565b61168767e911efc5e99bf24360c01b61034e565b61169b67da0b53f0c1675df260c01b61034e565b6099600083815260200190815260200160002060009054906101000a900460ff16156116fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f3906128f4565b60405180910390fd5b6117106706e799a3910ba40660c01b61034e565b611724676f6d1f64552e339960c01b61034e565b61173867a358c9c025c8df3c60c01b61034e565b819250505095945050505050565b61175a67111bab96ab089bf160c01b61034e565b61176e67127502660ba797b660c01b61034e565b611782675df56491d3b22b0f60c01b61034e565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117df91906121c7565b60206040518083038186803b1580156117f757600080fd5b505afa15801561180b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182f9190612929565b905061184567fec83933630edddf60c01b61034e565b611859671449a51c69353f2360c01b61034e565b61186d6788abf49e7870ad4d60c01b61034e565b838110156118b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a7906129c8565b60405180910390fd5b6118c4674970edcbac68b54160c01b61034e565b6118d8679e52328103dc8f0760c01b61034e565b6118ec673adbee49081d58b660c01b61034e565b6000609a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506119436732e3c327b498f9b460c01b61034e565b80600182805490506119559190612392565b81548110611966576119656122eb565b5b9060005260206000200154818481548110611984576119836122eb565b5b90600052602060002001819055506119a667fd6de2bde22ac0f260c01b61034e565b6119ba670e0868fe2fd863b260c01b61034e565b808054806119cb576119ca6129e8565b5b600190038181906000526020600020016000905590556119f56789653f118320cab260c01b61034e565b60016099600086815260200190815260200160002060006101000a81548160ff021916908315150217905550611a3567cf8dc78b1688321a60c01b61034e565b611a49673653cba3543de21e60c01b61034e565b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b8152600401611aa692919061242f565b602060405180830381600087803b158015611ac057600080fd5b505af1158015611ad4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af89190612a43565b50611b0d6712f9b25838cbc25760c01b61034e565b611b2167f764a6d904efeb7160c01b61034e565b3373ffffffffffffffffffffffffffffffffffffffff167fc45f413c8c6d500e3ae937f75df8a60dfb9968add321854bc776ac33a2ef90468787604051611b69929190612a70565b60405180910390a2505050505050565b600033905090565b600060019054906101000a900460ff16611bd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc790612744565b60405180910390fd5b611be0611bdb611b79565b611013565b565b600060019054906101000a900460ff16611c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2890612744565b60405180910390fd5b6001606581905550565b6000611c5167e9c27f91c78da86160c01b61034e565b611c6567500c590535013f3260c01b61034e565b611c7967a1b7da3d0ea24be060c01b61034e565b8282604051602001611c8c929190612a70565b60405160208183030381529060405280519060200120604051602001611cb29190612aba565b60405160208183030381529060405280519060200120905092915050565b6000611ce66779c67e967aa0e56460c01b61034e565b611cfa67fda77025492490e960c01b61034e565b611d0e679f18fdd943adf31a60c01b61034e565b8282604051602001611d21929190612a70565b60405160208183030381529060405280519060200120604051602001611d479190612aba565b60405160208183030381529060405280519060200120905092915050565b600082611d73868685611d7e565b149050949350505050565b60008082905060005b85859050811015611dca57611db582878784818110611da957611da86122eb565b5b90506020020135611dd6565b91508080611dc290612349565b915050611d87565b50809150509392505050565b6000818310611dee57611de98284611e01565b611df9565b611df88383611e01565b5b905092915050565b600082600052816020526040600020905092915050565b600080fd5b600080fd5b6000819050919050565b611e3581611e22565b8114611e4057600080fd5b50565b600081359050611e5281611e2c565b92915050565b600060208284031215611e6e57611e6d611e18565b5b6000611e7c84828501611e43565b91505092915050565b60008115159050919050565b611e9a81611e85565b82525050565b6000602082019050611eb56000830184611e91565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611ee057611edf611ebb565b5b8235905067ffffffffffffffff811115611efd57611efc611ec0565b5b602083019150836020820283011115611f1957611f18611ec5565b5b9250929050565b60008060208385031215611f3757611f36611e18565b5b600083013567ffffffffffffffff811115611f5557611f54611e1d565b5b611f6185828601611eca565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611fa281611e22565b82525050565b6000611fb48383611f99565b60208301905092915050565b6000602082019050919050565b6000611fd882611f6d565b611fe28185611f78565b9350611fed83611f89565b8060005b8381101561201e5781516120058882611fa8565b975061201083611fc0565b925050600181019050611ff1565b5085935050505092915050565b600060208201905081810360008301526120458184611fcd565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006120788261204d565b9050919050565b6120888161206d565b811461209357600080fd5b50565b6000813590506120a58161207f565b92915050565b6000602082840312156120c1576120c0611e18565b5b60006120cf84828501612096565b91505092915050565b6000819050919050565b6120eb816120d8565b81146120f657600080fd5b50565b600081359050612108816120e2565b92915050565b60006020828403121561212457612123611e18565b5b6000612132848285016120f9565b91505092915050565b61214481611e22565b82525050565b600060208201905061215f600083018461213b565b92915050565b60008060006060848603121561217e5761217d611e18565b5b600061218c86828701611e43565b935050602061219d868287016120f9565b92505060406121ae868287016120f9565b9150509250925092565b6121c18161206d565b82525050565b60006020820190506121dc60008301846121b8565b92915050565b600080604083850312156121f9576121f8611e18565b5b600061220785828601612096565b9250506020612218858286016120f9565b9150509250929050565b60008060008060008060a0878903121561223f5761223e611e18565b5b600061224d89828a016120f9565b965050602061225e89828a01611e43565b955050604061226f89828a016120f9565b945050606061228089828a016120f9565b935050608087013567ffffffffffffffff8111156122a1576122a0611e1d565b5b6122ad89828a01611eca565b92509250509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612354826120d8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156123875761238661231a565b5b600182019050919050565b600061239d826120d8565b91506123a8836120d8565b9250828210156123bb576123ba61231a565b5b828203905092915050565b60006123d1826120d8565b91506123dc836120d8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124155761241461231a565b5b828202905092915050565b612429816120d8565b82525050565b600060408201905061244460008301856121b8565b6124516020830184612420565b9392505050565b600082825260208201905092915050565b7f436f6d6d69746d656e7420616c72656164792065786973747300000000000000600082015250565b600061249f601983612458565b91506124aa82612469565b602082019050919050565b600060208201905081810360008301526124ce81612492565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612531602e83612458565b915061253c826124d5565b604082019050919050565b6000602082019050818103600083015261256081612524565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006125a361259e61259984612567565b61257e565b612571565b9050919050565b6125b381612588565b82525050565b60006020820190506125ce60008301846125aa565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612630602683612458565b915061263b826125d4565b604082019050919050565b6000602082019050818103600083015261265f81612623565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061269c602083612458565b91506126a782612666565b602082019050919050565b600060208201905081810360008301526126cb8161268f565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061272e602b83612458565b9150612739826126d2565b604082019050919050565b6000602082019050818103600083015261275d81612721565b9050919050565b7f496e76616c696420636f6d6d69746d656e740000000000000000000000000000600082015250565b600061279a601283612458565b91506127a582612764565b602082019050919050565b600060208201905081810360008301526127c98161278d565b9050919050565b7f496e76616c6964204d65726b6c6520726f6f7420696e64657800000000000000600082015250565b6000612806601983612458565b9150612811826127d0565b602082019050919050565b60006020820190508181036000830152612835816127f9565b9050919050565b7f496e76616c6964204d65726b6c652070726f6f66000000000000000000000000600082015250565b6000612872601483612458565b915061287d8261283c565b602082019050919050565b600060208201905081810360008301526128a181612865565b9050919050565b7f436f64652068617320616c7265616479206265656e2072656465656d65640000600082015250565b60006128de601e83612458565b91506128e9826128a8565b602082019050919050565b6000602082019050818103600083015261290d816128d1565b9050919050565b600081519050612923816120e2565b92915050565b60006020828403121561293f5761293e611e18565b5b600061294d84828501612914565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e7320696e2074686520636f6e7472616360008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b60006129b2602183612458565b91506129bd82612956565b604082019050919050565b600060208201905081810360008301526129e1816129a5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b612a2081611e85565b8114612a2b57600080fd5b50565b600081519050612a3d81612a17565b92915050565b600060208284031215612a5957612a58611e18565b5b6000612a6784828501612a2e565b91505092915050565b6000604082019050612a85600083018561213b565b612a926020830184612420565b9392505050565b6000819050919050565b612ab4612aaf82611e22565b612a99565b82525050565b6000612ac68284612aa3565b6020820191508190509291505056fea2646970667358221220a1c49666a630518a15e8b73bb5c2b7f12d616d449db4bd86187f9a2e225e412664736f6c63430008090033";

type CodesFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CodesFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CodesFactory__factory extends ContractFactory {
  constructor(...args: CodesFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CodesFactory> {
    return super.deploy(overrides || {}) as Promise<CodesFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CodesFactory {
    return super.attach(address) as CodesFactory;
  }
  override connect(signer: Signer): CodesFactory__factory {
    return super.connect(signer) as CodesFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CodesFactoryInterface {
    return new utils.Interface(_abi) as CodesFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CodesFactory {
    return new Contract(address, _abi, signerOrProvider) as CodesFactory;
  }
}
