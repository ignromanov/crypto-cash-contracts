/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CodesFactory,
  CodesFactoryInterface,
} from "../../contracts/CodesFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stMadTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "redeemer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "secretCode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CodeRedeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "merkleRootIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "numberOfCodes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "commitCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerkleRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "leaves",
        type: "bytes32[]",
      },
    ],
    name: "getRedeemedLeaves",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserCommitments",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "redeemedLeaves",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "merkleRootIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "secretCode",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "revealCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200221a3803806200221a8339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b61200380620002176000396000f3fe6080604052600436106100ab5760003560e01c80638d4e7f42116100645780638d4e7f42146101ea5780638da5cb5b1461021357806399ca856c1461023e578063a2a589961461027b578063d59cd23a146102a4578063f2fde38b146102cd576100b2565b80630255c903146100b45780632c3a04b5146100f157806331091d7a1461012e578063715018a61461016b57806371c5ecb11461018257806385135a1a146101bf576100b2565b366100b257005b005b3480156100c057600080fd5b506100db60048036038101906100d69190611249565b6102f6565b6040516100e89190611291565b60405180910390f35b3480156100fd57600080fd5b5061011860048036038101906101139190611311565b610316565b604051610125919061141c565b60405180910390f35b34801561013a57600080fd5b506101556004803603810190610150919061149c565b610420565b604051610162919061141c565b60405180910390f35b34801561017757600080fd5b506101806104b7565b005b34801561018e57600080fd5b506101a960048036038101906101a491906114ff565b6104cb565b6040516101b6919061153b565b60405180910390f35b3480156101cb57600080fd5b506101d46104ef565b6040516101e1919061141c565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c9190611556565b610547565b005b34801561021f57600080fd5b5061022861066c565b60405161023591906115b8565b60405180910390f35b34801561024a57600080fd5b50610265600480360381019061026091906115d3565b610695565b604051610272919061153b565b60405180910390f35b34801561028757600080fd5b506102a2600480360381019061029d9190611249565b6106c6565b005b3480156102b057600080fd5b506102cb60048036038101906102c69190611613565b6107b8565b005b3480156102d957600080fd5b506102f460048036038101906102ef919061149c565b610c14565b005b60036020528060005260406000206000915054906101000a900460ff1681565b606060008383905067ffffffffffffffff811115610337576103366116ad565b5b6040519080825280602002602001820160405280156103655781602001602082028036833780820191505090505b5090506000805b85859050811015610411576003600087878481811061038e5761038d6116dc565b5b90506020020135815260200190815260200160002060009054906101000a900460ff16156103fe578585828181106103c9576103c86116dc565b5b905060200201358383815181106103e3576103e26116dc565b5b60200260200101818152505081806103fa9061173a565b9250505b80806104099061173a565b91505061036c565b50808252819250505092915050565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156104ab57602002820191906000526020600020905b815481526020019060010190808311610497575b50505050509050919050565b6104bf610c98565b6104c96000610d16565b565b600281815481106104db57600080fd5b906000526020600020016000915090505481565b6060600280548060200260200160405190810160405280929190818152602001828054801561053d57602002820191906000526020600020905b815481526020019060010190808311610529575b5050505050905090565b61054f610c98565b60028390806001815401808255809150506001900390600052602060002001600090919091909150556000600160028054905061058c9190611783565b90506000828461059c91906117b7565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b81526004016105fb929190611820565b600060405180830381600087803b15801561061557600080fd5b505af1158015610629573d6000803e3d6000fd5b50505050817f14ae70b7538cb704d414f634689a12a1b4ac99bcce8305042069d26ee7fed3f38660405161065d919061153b565b60405180910390a25050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460205281600052604060002081815481106106b157600080fd5b90600052602060002001600091509150505481565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b818054905081101561078b578282828154811061072c5761072b6116dc565b5b90600052602060002001541415610778576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076f906118a6565b60405180910390fd5b80806107839061173a565b91505061070c565b50808290806001815401808255809150506001900390600052602060002001600090919091909150555050565b60028054905086106107ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f690611912565b60405180910390fd5b600061080b8685610dda565b90506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008060005b83805490508110156108a65784848281548110610876576108756116dc565b5b9060005260206000200154141561089357809250600191506108a6565b808061089e9061173a565b915050610856565b50806108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de9061197e565b60405180910390fd5b60006108f38a8a610dda565b9050600060028c8154811061090b5761090a6116dc565b5b9060005260206000200154905061093481838a8a610e339190939291909392919063ffffffff16565b610973576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096a906119ea565b60405180910390fd5b6003600083815260200190815260200160002060009054906101000a900460ff16156109d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cb90611a56565b60405180910390fd5b60016003600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a5d91906115b8565b60206040518083038186803b158015610a7557600080fd5b505afa158015610a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aad9190611a8b565b90508a811015610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae990611b2a565b60405180910390fd5b8560018780549050610b049190611783565b81548110610b1557610b146116dc565b5b9060005260206000200154868681548110610b3357610b326116dc565b5b906000526020600020018190555085805480610b5257610b51611b4a565b5b60019003818190600052602060002001600090559055610bb5338c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e4c9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fc45f413c8c6d500e3ae937f75df8a60dfb9968add321854bc776ac33a2ef90468d8d604051610bfd929190611b79565b60405180910390a250505050505050505050505050565b610c1c610c98565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8390611c14565b60405180910390fd5b610c9581610d16565b50565b610ca0610ed2565b73ffffffffffffffffffffffffffffffffffffffff16610cbe61066c565b73ffffffffffffffffffffffffffffffffffffffff1614610d14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0b90611c80565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008282604051602001610def929190611b79565b60405160208183030381529060405280519060200120604051602001610e159190611cc1565b60405160208183030381529060405280519060200120905092915050565b600082610e41868685610eda565b149050949350505050565b610ecd8363a9059cbb60e01b8484604051602401610e6b929190611820565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f32565b505050565b600033905090565b60008082905060005b85859050811015610f2657610f1182878784818110610f0557610f046116dc565b5b90506020020135610ff9565b91508080610f1e9061173a565b915050610ee3565b50809150509392505050565b6000610f94826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166110249092919063ffffffff16565b9050600081511115610ff45780806020019051810190610fb49190611d08565b610ff3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fea90611da7565b60405180910390fd5b5b505050565b60008183106110115761100c828461103c565b61101c565b61101b838361103c565b5b905092915050565b60606110338484600085611053565b90509392505050565b600082600052816020526040600020905092915050565b606082471015611098576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108f90611e39565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516110c19190611ed3565b60006040518083038185875af1925050503d80600081146110fe576040519150601f19603f3d011682016040523d82523d6000602084013e611103565b606091505b509150915061111487838387611120565b92505050949350505050565b606083156111835760008351141561117b5761113b85611196565b61117a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117190611f36565b60405180910390fd5b5b82905061118e565b61118d83836111b9565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156111cc5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112009190611fab565b60405180910390fd5b600080fd5b600080fd5b6000819050919050565b61122681611213565b811461123157600080fd5b50565b6000813590506112438161121d565b92915050565b60006020828403121561125f5761125e611209565b5b600061126d84828501611234565b91505092915050565b60008115159050919050565b61128b81611276565b82525050565b60006020820190506112a66000830184611282565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126112d1576112d06112ac565b5b8235905067ffffffffffffffff8111156112ee576112ed6112b1565b5b60208301915083602082028301111561130a576113096112b6565b5b9250929050565b6000806020838503121561132857611327611209565b5b600083013567ffffffffffffffff8111156113465761134561120e565b5b611352858286016112bb565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61139381611213565b82525050565b60006113a5838361138a565b60208301905092915050565b6000602082019050919050565b60006113c98261135e565b6113d38185611369565b93506113de8361137a565b8060005b8381101561140f5781516113f68882611399565b9750611401836113b1565b9250506001810190506113e2565b5085935050505092915050565b6000602082019050818103600083015261143681846113be565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114698261143e565b9050919050565b6114798161145e565b811461148457600080fd5b50565b60008135905061149681611470565b92915050565b6000602082840312156114b2576114b1611209565b5b60006114c084828501611487565b91505092915050565b6000819050919050565b6114dc816114c9565b81146114e757600080fd5b50565b6000813590506114f9816114d3565b92915050565b60006020828403121561151557611514611209565b5b6000611523848285016114ea565b91505092915050565b61153581611213565b82525050565b6000602082019050611550600083018461152c565b92915050565b60008060006060848603121561156f5761156e611209565b5b600061157d86828701611234565b935050602061158e868287016114ea565b925050604061159f868287016114ea565b9150509250925092565b6115b28161145e565b82525050565b60006020820190506115cd60008301846115a9565b92915050565b600080604083850312156115ea576115e9611209565b5b60006115f885828601611487565b9250506020611609858286016114ea565b9150509250929050565b60008060008060008060a087890312156116305761162f611209565b5b600061163e89828a016114ea565b965050602061164f89828a01611234565b955050604061166089828a016114ea565b945050606061167189828a016114ea565b935050608087013567ffffffffffffffff8111156116925761169161120e565b5b61169e89828a016112bb565b92509250509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611745826114c9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117785761177761170b565b5b600182019050919050565b600061178e826114c9565b9150611799836114c9565b9250828210156117ac576117ab61170b565b5b828203905092915050565b60006117c2826114c9565b91506117cd836114c9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118065761180561170b565b5b828202905092915050565b61181a816114c9565b82525050565b600060408201905061183560008301856115a9565b6118426020830184611811565b9392505050565b600082825260208201905092915050565b7f436f6d6d69746d656e7420616c72656164792065786973747300000000000000600082015250565b6000611890601983611849565b915061189b8261185a565b602082019050919050565b600060208201905081810360008301526118bf81611883565b9050919050565b7f496e76616c6964204d65726b6c6520726f6f7420696e64657800000000000000600082015250565b60006118fc601983611849565b9150611907826118c6565b602082019050919050565b6000602082019050818103600083015261192b816118ef565b9050919050565b7f496e76616c696420636f6d6d69746d656e740000000000000000000000000000600082015250565b6000611968601283611849565b915061197382611932565b602082019050919050565b600060208201905081810360008301526119978161195b565b9050919050565b7f496e76616c6964204d65726b6c652070726f6f66000000000000000000000000600082015250565b60006119d4601483611849565b91506119df8261199e565b602082019050919050565b60006020820190508181036000830152611a03816119c7565b9050919050565b7f436f64652068617320616c7265616479206265656e2072656465656d65640000600082015250565b6000611a40601e83611849565b9150611a4b82611a0a565b602082019050919050565b60006020820190508181036000830152611a6f81611a33565b9050919050565b600081519050611a85816114d3565b92915050565b600060208284031215611aa157611aa0611209565b5b6000611aaf84828501611a76565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e7320696e2074686520636f6e7472616360008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b14602183611849565b9150611b1f82611ab8565b604082019050919050565b60006020820190508181036000830152611b4381611b07565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000604082019050611b8e600083018561152c565b611b9b6020830184611811565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611bfe602683611849565b9150611c0982611ba2565b604082019050919050565b60006020820190508181036000830152611c2d81611bf1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611c6a602083611849565b9150611c7582611c34565b602082019050919050565b60006020820190508181036000830152611c9981611c5d565b9050919050565b6000819050919050565b611cbb611cb682611213565b611ca0565b82525050565b6000611ccd8284611caa565b60208201915081905092915050565b611ce581611276565b8114611cf057600080fd5b50565b600081519050611d0281611cdc565b92915050565b600060208284031215611d1e57611d1d611209565b5b6000611d2c84828501611cf3565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611d91602a83611849565b9150611d9c82611d35565b604082019050919050565b60006020820190508181036000830152611dc081611d84565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611e23602683611849565b9150611e2e82611dc7565b604082019050919050565b60006020820190508181036000830152611e5281611e16565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611e8d578082015181840152602081019050611e72565b83811115611e9c576000848401525b50505050565b6000611ead82611e59565b611eb78185611e64565b9350611ec7818560208601611e6f565b80840191505092915050565b6000611edf8284611ea2565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611f20601d83611849565b9150611f2b82611eea565b602082019050919050565b60006020820190508181036000830152611f4f81611f13565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000611f7d82611f56565b611f878185611849565b9350611f97818560208601611e6f565b611fa081611f61565b840191505092915050565b60006020820190508181036000830152611fc58184611f72565b90509291505056fea2646970667358221220e2b5de7ff9d9ab52a23115bed6f4422cc3b9cc13eca3023e3e7aaa187341dc2864736f6c63430008090033";

type CodesFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CodesFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CodesFactory__factory extends ContractFactory {
  constructor(...args: CodesFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    stMadTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CodesFactory> {
    return super.deploy(
      stMadTokenAddress,
      overrides || {}
    ) as Promise<CodesFactory>;
  }
  override getDeployTransaction(
    stMadTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(stMadTokenAddress, overrides || {});
  }
  override attach(address: string): CodesFactory {
    return super.attach(address) as CodesFactory;
  }
  override connect(signer: Signer): CodesFactory__factory {
    return super.connect(signer) as CodesFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CodesFactoryInterface {
    return new utils.Interface(_abi) as CodesFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CodesFactory {
    return new Contract(address, _abi, signerOrProvider) as CodesFactory;
  }
}
