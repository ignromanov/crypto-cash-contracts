/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StMadToken,
  StMadTokenInterface,
} from "../../contracts/StMadToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCodesFactory",
        type: "address",
      },
    ],
    name: "setCodesFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020017f53744d616420546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600581526020017f73744d6164000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620001a6565b508060049080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002bb565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000285565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029e57607f821691505b60208210811415620002b557620002b462000256565b5b50919050565b61197980620002cb6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d71461029d578063a9059cbb146102cd578063dd62ed3e146102fd578063f2fde38b1461032d57610100565b806370a0823114610227578063715018a6146102575780638da5cb5b1461026157806395d89b411461027f57610100565b806323b872dd116100d357806323b872dd1461018d578063313ce567146101bd57806339509351146101db57806340c10f191461020b57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd146101535780631afedfda14610171575b600080fd5b61010d610349565b60405161011a9190611033565b60405180910390f35b61013d600480360381019061013891906110ee565b6103db565b60405161014a9190611149565b60405180910390f35b61015b6103fe565b6040516101689190611173565b60405180910390f35b61018b6004803603810190610186919061118e565b610408565b005b6101a760048036038101906101a291906111bb565b610454565b6040516101b49190611149565b60405180910390f35b6101c5610483565b6040516101d2919061122a565b60405180910390f35b6101f560048036038101906101f091906110ee565b61048c565b6040516102029190611149565b60405180910390f35b610225600480360381019061022091906110ee565b6104c3565b005b610241600480360381019061023c919061118e565b610561565b60405161024e9190611173565b60405180910390f35b61025f6105a9565b005b6102696105bd565b6040516102769190611254565b60405180910390f35b6102876105e7565b6040516102949190611033565b60405180910390f35b6102b760048036038101906102b291906110ee565b610679565b6040516102c49190611149565b60405180910390f35b6102e760048036038101906102e291906110ee565b6106f0565b6040516102f49190611149565b60405180910390f35b6103176004803603810190610312919061126f565b610713565b6040516103249190611173565b60405180910390f35b6103476004803603810190610342919061118e565b61079a565b005b606060038054610358906112de565b80601f0160208091040260200160405190810160405280929190818152602001828054610384906112de565b80156103d15780601f106103a6576101008083540402835291602001916103d1565b820191906000526020600020905b8154815290600101906020018083116103b457829003601f168201915b5050505050905090565b6000806103e661081e565b90506103f3818585610826565b600191505092915050565b6000600254905090565b6104106109f1565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008061045f61081e565b905061046c858285610a6f565b610477858585610afb565b60019150509392505050565b60006012905090565b60008061049761081e565b90506104b88185856104a98589610713565b6104b3919061133f565b610826565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054a906113e1565b60405180910390fd5b61055d8282610d73565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105b16109f1565b6105bb6000610eca565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105f6906112de565b80601f0160208091040260200160405190810160405280929190818152602001828054610622906112de565b801561066f5780601f106106445761010080835404028352916020019161066f565b820191906000526020600020905b81548152906001019060200180831161065257829003601f168201915b5050505050905090565b60008061068461081e565b905060006106928286610713565b9050838110156106d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ce90611473565b60405180910390fd5b6106e48286868403610826565b60019250505092915050565b6000806106fb61081e565b9050610708818585610afb565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6107a26109f1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610812576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080990611505565b60405180910390fd5b61081b81610eca565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088d90611597565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd90611629565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109e49190611173565b60405180910390a3505050565b6109f961081e565b73ffffffffffffffffffffffffffffffffffffffff16610a176105bd565b73ffffffffffffffffffffffffffffffffffffffff1614610a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6490611695565b60405180910390fd5b565b6000610a7b8484610713565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610af55781811015610ae7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ade90611701565b60405180910390fd5b610af48484848403610826565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6290611793565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd290611825565b60405180910390fd5b610be6838383610f90565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c63906118b7565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d5a9190611173565b60405180910390a3610d6d848484610f95565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610de3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dda90611923565b60405180910390fd5b610def60008383610f90565b8060026000828254610e01919061133f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610eb29190611173565b60405180910390a3610ec660008383610f95565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fd4578082015181840152602081019050610fb9565b83811115610fe3576000848401525b50505050565b6000601f19601f8301169050919050565b600061100582610f9a565b61100f8185610fa5565b935061101f818560208601610fb6565b61102881610fe9565b840191505092915050565b6000602082019050818103600083015261104d8184610ffa565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110858261105a565b9050919050565b6110958161107a565b81146110a057600080fd5b50565b6000813590506110b28161108c565b92915050565b6000819050919050565b6110cb816110b8565b81146110d657600080fd5b50565b6000813590506110e8816110c2565b92915050565b6000806040838503121561110557611104611055565b5b6000611113858286016110a3565b9250506020611124858286016110d9565b9150509250929050565b60008115159050919050565b6111438161112e565b82525050565b600060208201905061115e600083018461113a565b92915050565b61116d816110b8565b82525050565b60006020820190506111886000830184611164565b92915050565b6000602082840312156111a4576111a3611055565b5b60006111b2848285016110a3565b91505092915050565b6000806000606084860312156111d4576111d3611055565b5b60006111e2868287016110a3565b93505060206111f3868287016110a3565b9250506040611204868287016110d9565b9150509250925092565b600060ff82169050919050565b6112248161120e565b82525050565b600060208201905061123f600083018461121b565b92915050565b61124e8161107a565b82525050565b60006020820190506112696000830184611245565b92915050565b6000806040838503121561128657611285611055565b5b6000611294858286016110a3565b92505060206112a5858286016110a3565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112f657607f821691505b6020821081141561130a576113096112af565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061134a826110b8565b9150611355836110b8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561138a57611389611310565b5b828201905092915050565b7f4f6e6c7920436f646573466163746f72792063616e206d696e74000000000000600082015250565b60006113cb601a83610fa5565b91506113d682611395565b602082019050919050565b600060208201905081810360008301526113fa816113be565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061145d602583610fa5565b915061146882611401565b604082019050919050565b6000602082019050818103600083015261148c81611450565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006114ef602683610fa5565b91506114fa82611493565b604082019050919050565b6000602082019050818103600083015261151e816114e2565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611581602483610fa5565b915061158c82611525565b604082019050919050565b600060208201905081810360008301526115b081611574565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611613602283610fa5565b915061161e826115b7565b604082019050919050565b6000602082019050818103600083015261164281611606565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061167f602083610fa5565b915061168a82611649565b602082019050919050565b600060208201905081810360008301526116ae81611672565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116eb601d83610fa5565b91506116f6826116b5565b602082019050919050565b6000602082019050818103600083015261171a816116de565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061177d602583610fa5565b915061178882611721565b604082019050919050565b600060208201905081810360008301526117ac81611770565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061180f602383610fa5565b915061181a826117b3565b604082019050919050565b6000602082019050818103600083015261183e81611802565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006118a1602683610fa5565b91506118ac82611845565b604082019050919050565b600060208201905081810360008301526118d081611894565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061190d601f83610fa5565b9150611918826118d7565b602082019050919050565b6000602082019050818103600083015261193c81611900565b905091905056fea26469706673582212205574f78849d7a6d54b0bbb3fef7b320069d80917c8f06b8835ca2a372aafb9d564736f6c63430008090033";

type StMadTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StMadTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StMadToken__factory extends ContractFactory {
  constructor(...args: StMadTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StMadToken> {
    return super.deploy(overrides || {}) as Promise<StMadToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StMadToken {
    return super.attach(address) as StMadToken;
  }
  override connect(signer: Signer): StMadToken__factory {
    return super.connect(signer) as StMadToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StMadTokenInterface {
    return new utils.Interface(_abi) as StMadTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StMadToken {
    return new Contract(address, _abi, signerOrProvider) as StMadToken;
  }
}
